%%%
%%% Scenario:
%%% Two conveyors connected. (C1 and C2.)
%%%

Rec = fun() -> receive V -> io:format("~w~n", [V]) after 0 -> end_of_rec end end.
tc51eventmgr:start().

C1 = spawn(simdr_actor_container, init, [simdr_actor_conveyor:create('C1',3,4)]).
C2 = spawn(simdr_actor_container, init, [simdr_actor_conveyor:create('C2',5,6)]).
C1 ! C2 ! {start}.

C1 ! {self(), {add, out, C2}}.
C2 ! {self(), {add, out, self()}}.
C2 ! {self(), {change, capacity, 2}}.
C2 ! {self(), {change, mode, rt}}.

P1 = simdr_actor_product:create().
P2 = simdr_actor_product:create().
P3 = simdr_actor_product:create().
P4 = simdr_actor_product:create().

C1 ! {self(), {actor_product, P1}}.
C1 ! {self(), {actor_product, P2}}.
C1 ! {self(), {actor_product, P3}}.
C1 ! {self(), {actor_product, P4}}.

=======

%%% Outputs:
%%% C1 ! {self(), {io_export, list_data}}.
%%% C1 ! {self(), {file_export, list_data}}.
%%% C1 ! {self(), {csv_export, list_data}}.
%%% C1 ! {self(), {io_export, debug}}.
%%% C1 ! {self(), {file_export, debug}}.
%%% C1 ! {self(), {csv_export, debug}}.
%%%
%%% C2 ! {self(), {io_export, list_data}}.
%%% C2 ! {self(), {file_export, list_data}}.
%%% C2 ! {self(), {csv_export, list_data}}.
%%% C2 ! {self(), {io_export, debug}}.
%%% C2 ! {self(), {file_export, debug}}.
%%% C2 ! {self(), {csv_export, debug}}.
%%%
%%% simdr_actor_contract:answer(P1, {csv_export, list_data}).
%%% simdr_actor_contract:answer(P2, {csv_export, list_data}).
%%% simdr_actor_contract:answer(P3, {csv_export, list_data}).
%%% simdr_actor_contract:answer(P4, {csv_export, list_data}).


C1 ! {self(), {file_export, list_data}}.
C2 ! {self(), {file_export, list_data}}.
simdr_actor_contract:answer(P1, {csv_export, list_data}).
%%%
%%% Scenario:
%%% One conveyor (C1) (with RFID (RF1) attached) 
%%% is linked to a railway (R2).
%%% 
%%% The railway (R2) has two outputs: 
%%% 	Output one: A conveyor (C3a), then 
%%%					Queue (BQ4a) and its 
%%%					Workstation (WST5a).
%%% 	Output two: A simple conveyor (C3b).
%%%
%%% Then a product is sent to the first conveyor, 
%%% and the railway is guided manually by giving it a command.

C1 = spawn(container, idling, [actor_conveyor:create()]).
%RF1 = spawn(container, idling, [actor_rfid:create()]).

R2 = spawn(container, idling, [actor_railway:create()]).

C3a = spawn(container, idling, [actor_conveyor:create()]).

C3b = spawn(container, idling, [actor_conveyor:create()]).

BQ4a = spawn(container, idling, [actor_basic_queue:create()]).
WST5a = spawn(container, idling, [actor_workstation:create()]).

C1 ! R2 ! C3a ! BQ4a ! WST5a ! C3b ! {start}.

%C1 ! {self(), {add, option, {rfid, RF1}}}.
C1 ! {self(), {add,out, R2}}.
R2 ! {self(), {add,out, C3a}}.
R2 ! {self(), {add, out, C3b}}.
C3a ! {self(), {add, out, BQ4a}}.
BQ4a ! {self(), {add, out, WST5a}}.
WST5a ! {self(), {add, out, self()}}.
C3b ! {self(), {add, out, self()}}.


P1 = actor_product:create().

C1 ! {self(), {actor_product, P1}}.

R2 ! {self(), {prob_out, P1, C3a}}.
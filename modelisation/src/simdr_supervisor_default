-module(simdr_supervisor_default).
-include("app_configuration.hrl").

-ifdef(TEST).
-include_lib("eunit/include/eunit.hrl").
-endif.


action_on_request(Config, Sender, {add, actor, Actor}) ->
	% io:format("<><> Adding actor ~w.~n", [Actor]),
	NewConfig = simdr_actor_contract:add_actor(Config, {Sender, Actor}),
	NewConfig;

action_on_request(Config, Sender, {work_time, N, changed})->
	Actor = simdr_actor_contract:get_actor(Config, Sender),
	NewActor = simdr_actor_contract:set_work_time(Actor, N),
 	update_actor(Config, Sender, NewActor);

action_on_request(Config, Sender, {distance, N, changed})->
 	Actor = simdr_actor_contract:get_actor(Config, Sender),
	NewActor = simdr_actor_contract:set_distance(Actor, N),
 	simdr_actor_contract:update_actor(Config, Sender, NewActor);

action_on_request(Config, Sender,  {speed, N, changed})->
 	Actor = simdr_actor_contract:get_actor(Config, Sender),
	NewActor = simdr_actor_contract:set_speed(Actor, N),
 	simdr_actor_contract:update_actor(Config, Sender, NewActor);

 action_on_request(Config, Sender, {state, State, changed})->
 	Actor = simdr_actor_contract:get_actor(Config, Sender),
	NewActor = simdr_actor_contract:set_state(Actor, State),
 	update_actor(Config, Sender, NewActor);

 action_on_request(Config, Sender, {capacity, Capacity, changed})->
 	Actor = simdr_actor_contract:get_actor(Config, Sender),
	NewActor = simdr_actor_contract:set_capacity(Actor, Capacity),
 	update_actor(Config, Sender, NewActor);

 action_on_request(Config, Sender, {in_out, {In, Out}, changed})->
 	Actor = simdr_actor_contract:get_actor(Config, Sender),
	NewActor = simdr_actor_contract:set_in_out(Actor, {In, Out}),
 	update_actor(Config, Sender, NewActor);

  action_on_request(Config, Sender, {in, In, added})->
 	Actor = simdr_actor_contract:get_actor(Config, Sender),
 	% io:format("~n<><> ~w <><>~n", [Actor]),
	NewActor = simdr_actor_contract:add_in(Actor, In),
	{_In, Out} = simdr_actor_contract:get_in_out(NewActor),
	NewActor2 = simdr_actor_contract:set_in_out(NewActor, {In, Out}),
 	simdr_actor_contract:update_actor(Config, Sender, NewActor2);
 
  action_on_request(Config, Sender, {out, Out, added})->
 	Actor = simdr_actor_contract:get_actor(Config, Sender),
	NewActor = simdr_actor_contract:add_out(Actor, Out),
	{In, _Out} = simdr_actor_contract:get_in_out(NewActor),
	NewActor2 = simdr_actor_contract:set_in_out(NewActor, {In, Out}),
 	update_actor(Config, Sender, NewActor2);

   action_on_request(Config, Sender, {add, option, Opt})->
 	Actor = simdr_actor_contract:get_actor(Config, Sender),
	NewActor = simdr_actor_contract:add_option(Actor, Opt),
 	simdr_actor_contract:update_actor(Config, Sender, NewActor);

 	

action_on_request(Config, Sender, Request) ->
	io:format("SUPERVISOR <><> UNKNOWN REQUEST ~w (from ~w).~n", [Request, Sender]),
	Config.